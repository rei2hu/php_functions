#!/bin/node

// const ts = ["{lft}","{LFT}","{rght}"
const ts = ["{f1}","{F1}","{f2}","{F2}","{f3}","{f4}","{F4}","{f5}",
	"{F5}","{f6}","{F6}","{f7}","1","!","2","@","3","4","$","5","%","6","^","7","8",
	"*","9","(","0","q","Q","w","W","e","E","r","t","T","y","Y","u","i","I","o","O",
	"p","P","a","s","S","d","D","f","g","G","h","H","j","J","k","l","L","z","Z","x",
	"c","C","v","V","b","B","n","m","M"];
// "{ins}","{INS}","{hom}","{pup}","{PUP}","{del}", "{DEL}","{end}","{END}","{pdn}","{upa}"];

const content = require('fs').readFileSync(process.argv[2], 'utf8');

function capscounter(notes) {
	let num = 0;
	for (const ch of notes) {
		if (ch.toLowerCase() !== ch) {
			num++;
		}
	}
	return num;
}

function transpose(amnt) {
	let notes = ''
	for (const ch of content) {
		switch (ch) {
			case ' ':
			case '\t':
				notes += ' ';
				break;
			case '\n':
				notes += '\n';
				break;
			case ':':
			case '{':
			case '}':
			case '[':
			case ']':
			case '<':
			case '>':
			case '|':
			case '-':
				notes += ch;
				break;
			default:
				const idx = ts.indexOf(ch);
				if (idx < 0 || idx + amnt < 0 || idx + amnt > ts.length - 1) {
					console.error('error', ch);
				} else {
					notes += ts[idx + amnt];
				}
		}
	}
	notes = notes.replace(/\[(.*?)]/g, (m, p1) => `[${p1.split('').sort().join('')}]`);
	return notes;
}

let min = content.length;
for (let i = -5; i < 5; i++) {
	const transposed = transpose(i);
	let number = capscounter(transposed);
	min = Math.min(number, min);
	console.log(`TRANSPOSED ${i}, ${number} shifts`);
	console.log(transposed);
}
console.log(`min shifts is ${min}`);
